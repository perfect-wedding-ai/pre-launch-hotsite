name: Deploy to Netlify
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run tests

  deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
            node_modules/.cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Configurar variáveis de ambiente em todos os locais necessários
        run: |
          echo "Criando arquivo .env.production e copiando para outros locais..."
          
          # Criar o arquivo principal
          cat > .env.production << EOF
          # Variáveis públicas
          NEXT_PUBLIC_BASE_URL=${{ vars.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_DEFAULT_LOCALE=${{ vars.NEXT_PUBLIC_DEFAULT_LOCALE }}
          NEXT_TELEMETRY_DISABLED=${{ vars.NEXT_TELEMETRY_DISABLED }}
          
          # Google Analytics
          GOOGLE_ANALYTICS_ID=${{ vars.GOOGLE_ANALYTICS_ID }}
          GOOGLE_SITE_VERIFICATION=${{ vars.GOOGLE_SITE_VERIFICATION }}
          
          # Contentful
          CONTENTFUL_SPACE_ID=${{ vars.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ENVIRONMENT_ID=${{ vars.CONTENTFUL_ENVIRONMENT_ID }}
          CONTENTFUL_ACCESS_TOKEN=${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_MANAGEMENT_TOKEN=${{ secrets.CONTENTFUL_MANAGEMENT_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN=${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          CONTENTFUL_REVALIDATE_SECRET=${{ secrets.CONTENTFUL_REVALIDATE_SECRET }}
          EOF
          
          # Copiar para os diretórios padrão
          cp .env.production .env
          cp .env.production .env.local
          
          # Copiar para o diretório public
          mkdir -p public
          cp .env.production public/.env
          cp .env.production public/.env.production
          cp .env.production public/.env.local
          
          # Copiar para o diretório interno do Netlify
          mkdir -p .netlify/functions-internal/___netlify-server-handler/
          cp .env.production .netlify/functions-internal/___netlify-server-handler/.env
          cp .env.production .netlify/functions-internal/___netlify-server-handler/.env.production
          cp .env.production .netlify/functions-internal/___netlify-server-handler/.env.local
          
          echo "Arquivos de ambiente copiados para todos os locais necessários"

      - name: Create netlify.toml for env files
        run: |
          cat > netlify.toml << EOF
          [build]
            command = "npm run build"
            publish = ".next"
          
          [functions]
            included_files = [".env", ".env.production", ".env.local", "public/.env", "public/.env.production", "public/.env.local"]
          
          [[plugins]]
            package = "@netlify/plugin-nextjs"
          
          [build.environment]
            NODE_VERSION = "20"
            NPM_VERSION = "10"
            NEXT_TELEMETRY_DISABLED = "1"
            NODE_ENV = "production"
          
          [[headers]]
            for = "/*"
            [headers.values]
              X-Frame-Options = "DENY"
              X-XSS-Protection = "1; mode=block"
              X-Content-Type-Options = "nosniff"
              Referrer-Policy = "strict-origin-when-cross-origin"
          EOF
          echo "netlify.toml created with environment file inclusions"

      - name: Deploy to Netlify
        run: |
          echo "Starting Netlify deployment..."
          netlify deploy --build --prod --message "Deploy from GitHub Actions"
        env:
          NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_DEFAULT_LOCALE: ${{ vars.NEXT_PUBLIC_DEFAULT_LOCALE }}
          NEXT_TELEMETRY_DISABLED: ${{ vars.NEXT_TELEMETRY_DISABLED }}

          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

          GOOGLE_ANALYTICS_ID: ${{ vars.GOOGLE_ANALYTICS_ID }}
          GOOGLE_SITE_VERIFICATION: ${{ vars.GOOGLE_SITE_VERIFICATION }}

          CONTENTFUL_SPACE_ID: ${{ vars.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ENVIRONMENT_ID: ${{ vars.CONTENTFUL_ENVIRONMENT_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_MANAGEMENT_TOKEN: ${{ secrets.CONTENTFUL_MANAGEMENT_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          CONTENTFUL_REVALIDATE_SECRET: ${{ secrets.CONTENTFUL_REVALIDATE_SECRET }}